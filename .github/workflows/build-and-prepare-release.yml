name: Build and Prepare Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: windows-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore packages
        run: |
          cd "${{ github.workspace }}"
          dotnet restore mfsappscontrol.sln

      - name: Build and publish self-contained app
        run: |
          cd "${{ github.workspace }}\MFSAppsControl"
          dotnet publish "MFSAppsControl.csproj" -p:PublishProfile=win-x64

      - name: Get Release version
        id: get_version
        run: |
          cd "${{ github.workspace }}\MFSAppsControl"
          $csproj = Get-ChildItem -Path . -Filter *.csproj -Recurse | Select-Object -First 1
          [xml]$xml = Get-Content $csproj.FullName
          $version = $xml.Project.PropertyGroup.AssemblyVersion | Select-Object -First 1
          Write-Host "Version: $version"
          echo "version=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Generate release note files
        run: |
          cd "${{ github.workspace }}"
          $lines = Get-Content "CHANGELOG.md"
          $startIndex = ($lines | Select-String -Pattern '^## ' | Select-Object -First 1).LineNumber - 1
          $nextIndex = ($lines | Select-String -Pattern '^## ' | Select-Object -Skip 1 -First 1).LineNumber - 2
          $releaseNote = $lines[$startIndex..$nextIndex] -join "`n"
          $releaseNote | Out-File -FilePath "RELEASENOTE.md"
          $releaseNote = ($releaseNote -split "`r?`n" | ForEach-Object { if ($_ -match '^### (.+)$') { "[$($matches[1])]" } else { $_ }}) -join "`r`n"
          $releaseNote = $releaseNote -replace '## ',''
          $releaseNote | Out-File -FilePath "MFSAppsControl\Output\RELEASENOTE.txt"

      - name: Update version setup script
        run: |
          cd "${{ github.workspace }}\MFSAppsControl"
          $iss = "mfsappscontrol.iss"
          $version = "${{ steps.get_version.outputs.version }}"
          (Get-Content $iss) -replace 'appVersion .*', "appVersion ""$version""" | Set-Content $iss

      - name: Download Inno Setup
        run: |
          Invoke-WebRequest -Uri "https://jrsoftware.org/download.php/is.exe" -OutFile is.exe
          Start-Process .\is.exe -ArgumentList "/VERYSILENT","/SUPPRESSMSGBOXES","/NORESTART","/SP-" -Wait

      - name: Build installer
        run: |
          $iscc = "C:\Program Files (x86)\Inno Setup 6\ISCC.exe"
          $iss = "${{ github.workspace }}\MFSAppsControl\mfsappscontrol.iss"
          & "$iscc" "$iss"

      - name: Compress files
        run: |
          cd "${{ github.workspace }}"
          Compress-Archive -Path "MFSAppsControl\Output\*" -DestinationPath MFSAppsControl.zip

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: mfsappscontrol-installer
          path: "${{ github.workspace }}\\MFSAppsControl.zip"

      - name: Upload release notes
        uses: actions/upload-artifact@v4
        with:
          name: mfsappscontrol-release-notes
          path: "${{ github.workspace }}\\RELEASENOTE.md"

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download installer artifact
        uses: actions/download-artifact@v4
        with:
          name: mfsappscontrol-installer

      - name: Download release notes
        uses: actions/download-artifact@v4
        with:
          name: mfsappscontrol-release-notes

      - name: Create draft Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.build.outputs.version }}
          body_path: RELEASENOTE.md
          generate_release_notes: true
          draft: true
          prerelease: false
          fail_on_unmatched_files: true
          make_latest: true
          files: MFSAppsControl.zip